!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Service=e()}}(function(){return function(){return function e(t,r,s){function i(a,n){if(!r[a]){if(!t[a]){var p="function"==typeof require&&require;if(!n&&p)return p(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=r[a]={exports:{}};t[a][0].call(c.exports,function(e){return i(t[a][1][e]||e)},c,c.exports,e,t,r,s)}return r[a].exports}for(var o="function"==typeof require&&require,a=0;a<s.length;a++)i(s[a]);return i}}()({1:[function(e,t,r){(function(r){"use strict";var{DBG:s,ERR:i,WARN:o,INFO:a}=global.getLogger(r),{PeripheralService:n,express:p,bodyParser:u}=global.getBundledModules();const{RELATIONSHIP_NONE:c,RELATIONSHIP_CONFIGURED:d,RELATIONSHIP_MANAGED:h}=n.relationships,l="nodejs_process";t.exports=class extends n{constructor(e,t,r){super(e,t,r),this.name="ps-demo1",this.types=[l],this.pid=process.pid.toString(),this.monitors=[]}updatePeripheralState(){var t=e("os"),r={ppid:process.ppid,versions:process.versions,os_uptime:t.uptime(),os_platform:t.platform()};this.emitPeripheralState(l,this.pid,h,r)}processMonitorData(e,t,r){this.emitData(l,this.pid,e,t,r)}init(t){var r=new(e("./monitors/cpu"))(2e3);this.monitors.push(r);var s=new(e("./monitors/memory"))(1e4);this.monitors.push(s);var i=this;return this.monitors.forEach(e=>{a(`add data listener for monitors[${e.getName().yellow}]`),e.on("data-updated",(e,t,r)=>i.processMonitorData(e,t,r))}),t()}fini(e){return this.peripheralTimer&&(a("stop peripheral timer"),clearInterval(this.peripheralTimer)),this.monitors.forEach(e=>{a(`stop monitors[${e.getName().yellow}]`),e.stop()}),e()}atRegistered(){a("the peripheral service is registered ..."),this.updatePeripheralState(),this.peripheralTimer=setInterval(()=>{self.updatePeripheralState()},6e4),this.monitors.forEach(e=>{e.start()})}performAction(e,t,r,i,o,a,n,p,u){return s(`got actuator-request: ${e}/${t}/${r}/${i}/${o} => ${a}, ${n}, ${p}`),u()}}}).call(this,e("path").join(__dirname,"src","index.js"))},{"./monitors/cpu":3,"./monitors/memory":4,os:void 0,path:void 0}],2:[function(e,t,r){"use strict";const s=e("events");t.exports=class extends s{constructor(e){super(),this.name="base",this.interval=e,this.timer=null}getName(){return this.name}start(){var e=this;this.capture(),this.timer=setInterval(()=>{e.capture()},this.interval)}stop(){this.timer&&clearInterval(this.timer)}capture(){}}},{events:void 0}],3:[function(e,t,r){"use strict";var s=e("./base");t.exports=class extends s{constructor(e){super(e),this.name="cpu"}start(){super.start(),this.startUsage=process.cpuUsage()}capture(){var e=process.cpuUsage(this.startUsage);this.emit("data-updated","cpu","0",e)}}},{"./base":2}],4:[function(e,t,r){"use strict";var s=e("./base");t.exports=class extends s{constructor(e){super(e),this.name="memory"}capture(){var e=process.memoryUsage();this.emit("data-updated","memory","0",e)}}},{"./base":2}]},{},[1])(1)});